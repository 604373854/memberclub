spring:
  profiles:
    active: @enviroment@
  application:
    name: memberclub
  main:
    allow-circular-references: true
  datasource:
    url: jdbc:h2:mem:member_db;DB_CLOSE_DELAY=-1;mode=MySQL;TRACE_LEVEL_SYSTEM_OUT=2;
    username: test
    password: test
    hikari:
      driver-class-name: org.h2.Driver
  rabbitmq:
    port: 5672
    virtual-host: /
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual
    template:
      mandatory: true
    publisher-confirm-type: correlated


mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.memberclub.domain.entity


eureka:
  client:
    enable: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

liteflow:
  print-execution-log: false
logging:
  config: classpath:log/log4j2.xml

context:
  initializer:
    classes: com.memberclub.common.util.MemberClubApplicationContextInitializer



memberclub:
  infrastructure:
    config: apollo
    id: redisson
    lock: redisson
    retry: rabbitmq
    mq: rabbitmq
  extension:
    bootcheck: true



# actuator 配置
management:
  #默认和请求接口的端口一致，这里指定一个新的端口号，防止被人猜到
  server:
    port: 8686
  endpoints:
    web:
      #对外暴露actuator的哪些监控数据，注意单词不要写错了，写错了外部是无法访问接口的
      exposure:
        include:
        - health
        - prometheus
  endpoint:
    # 启用之后，才能够正常调用  /actuator/prometheus 接口
    prometheus:
      enabled: true
    #健康检查
    health:
      #总是展示健康检查的详细信息
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      #应用程序名称，这个配置建议加上，Grafana官方提供的面板配置很多用了这个label
      application: ${spring.application.name}
# 配置完成之后，启动项目
# 就可以正常访问 /actuator/health接口 或者 /actuator/prometheus ，因为目前只暴露了这两个接口