spring:
  #### 数据库 配置
  datasource:
    dynamic:
      primary: tradeDataSource
      strict: true
      datasource:
        druid:
          initialSize: 3
          minIdle: 3
          maxActive: 20
        tradeDataSource:
          url: jdbc:mysql://localhost:3306/member_db?useUnicode=true&characterEncoding=UTF-8
          ##url: jdbc:h2:mem:member_db;DB_CLOSE_DELAY=-1;mode=MySQL;
          ## #TRACE_LEVEL_SYSTEM_OUT=2;
          username: root
          password: 123456
          lazy: false
          health: true
          driverClassName: com.mysql.jdbc.Driver
          init:
            schema: classpath:sql/member_db.sql
        skuDataSource:
          url: jdbc:mysql://localhost:3306/member_sku?useUnicode=true&characterEncoding=UTF-8
          ##url: jdbc:h2:mem:member_db;DB_CLOSE_DELAY=-1;mode=MySQL;
          ## #TRACE_LEVEL_SYSTEM_OUT=2;
          username: root
          password: 123456
          lazy: false
          health: true
          driverClassName: com.mysql.jdbc.Driver
          init:
            schema: classpath:sql/member_sku.sql
  #### RabbitMQ 配置
  rabbitmq:
    host: localhost
    stream:
      username: guest
      password: guest
  #### Redis配置
  redis:
    # 数据库
    database: 0
    # 主机
    host: localhost
    # 端口
    port: 6379
    # 密码
    #password:
    # 读超时
    timeout: 5s
    # 连接超时
    connect-timeout: 5s
    redisson:
      config:
        singleServerConfig:
          password: null
          address: "redis://127.0.0.1:6379"
          database: 1
        threads: 4
        nettyThreads: 4
        codec: "!<org.redisson.codec.FstCodec> {}"
        transportMode: "NIO"


eureka:
  client:
    enable: false
    service-url:
      defaultZone: http://localhost:8761/eureka/

# 禁用向 eureka 注册
eureka.client.register-with-eureka: false
eureka.client.fetch-registry: false


logging:
  config: classpath:log/log4j2.xml

## 测试模式
memberclub:
  infrastructure:
    config: apollo
    lock: redisson
    feign:
      enabled: false
    id: redisson
    retry: redisson
    mq: rabbitmq
    order: local
    asset: local
    sku: local
  extension:
    bootcheck: true
apollo:
  meta: http://127.0.0.1:8080
  bootstrap:
    enabled: true # 是否开启 Apollo


### 业务自定义配置项 Start
junit_test_poll_config: false

### 业务自定义配置项 END
