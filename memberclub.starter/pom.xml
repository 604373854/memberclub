<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>memberclub</artifactId>
        <groupId>com.memberclub</groupId>
        <version>${baseversion}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>memberclub.starter</artifactId>
    <packaging>jar</packaging>
    <version>${baseversion}</version>

    <dependencies>
        <dependency>
            <groupId>com.memberclub</groupId>
            <artifactId>memberclub.sdk</artifactId>
            <version>${baseversion}</version>
        </dependency>
        <dependency>
            <groupId>com.memberclub</groupId>
            <artifactId>memberclub.plugin.demomember</artifactId>
            <version>${baseversion}</version>
        </dependency>
        <dependency>
            <groupId>com.memberclub</groupId>
            <artifactId>memberclub.infrastructure</artifactId>
            <version>${baseversion}</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.datatype</groupId>
                    <artifactId>jackson-datatype-jsr310</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- lombok dependencies should not end up on classpath -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.yomahub</groupId>
            <artifactId>liteflow-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <!-- 配置文件标识id，命令行用到，如mvn package -P ut -->
            <id>ut</id> <!--单测环境-->
            <!-- 设置变量 -->
            <properties>
                <enviroment>ut</enviroment>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>standalone</id>
            <properties>
                <enviroment>standalone</enviroment>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <enviroment>test</enviroment>
            </properties>
        </profile>
        <profile>
            <id>online</id>
            <properties>
                <enviroment>online</enviroment>
            </properties>
        </profile>
    </profiles>


    <build>
        <finalName>memberclub-starter-${enviroment}</finalName>
        <!-- maven打包插件 -->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 资源文件相关插件，用于将资源文件复制到输出目录，在相关生命周期中调用 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!-- 使用你需要的版本 -->
                <version>3.2.0</version>
                <!-- 在这里添加你的配置 -->
                <configuration>
                    <!-- 资源文件的字符集编码 -->
                    <encoding>UTF-8</encoding>
                    <!--                    <delimiters>-->
                    <!--                        <delimiter>@</delimiter> &lt;!&ndash; 自定义定界符 &ndash;&gt;-->
                    <!--                    </delimiters>-->
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>

        <!-- maven-resources-plugin的配置 -->
        <resources>
            <!-- 每个资源目录一个resource标签 -->
            <resource>
                <!-- 指定资源文件目录 -->
                <directory>src/main/resources</directory>
                <!-- 哪些文件需要打包，不配置就是全部进行打包 -->
                <includes>
                    <include>application.yml</include>
                    <include>application-${enviroment}.yml</include>
                    <include>sql/*.sql</include>
                    <include>log/log4j2.xml</include>
                    <include>log/log4j2-${enviroment}.xml</include>
                </includes>
                <!-- 是否需要进行变量替换，没有必要使用变量取值的，千万不要将filtering设置为true，针对于这一点官网也明确指出二进制文件一定不要过滤，例如Excel模板 -->
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>